function headerTyping(){function t(t,n){for(var e=0;e<n.length;e++){var i=$("<span/>",{text:n.charAt(e),class:"char char-"+(o+1)});t.append(i),o++}}var n=$(".header-logo");n.find(".char").remove();var e=n.children("span"),i=n.children("small"),o=0;t(e,e.children("span").textNode()),t(i,i.children("span").textNode())}function toggleIsClick(){$(this).toggleClass("is-click")}function isElementOnScreen(t){var n=$(window),e=n.scrollTop(),i=e+n.height(),o=e+n.height()/2,a=t.offset().top,s=a+t.height();return a<i&&a>=e||a<e&&s>o}function replaceAt(t,n,e){return t.substring(0,n)+e+t.substring(n+1)}$(function(){oLng.init(),oNav.init(),$(document).on("scroll",function(t){oNav.upd()})}),oLng={sDefault:"ru",init:function(){var t=this;localStorage.getItem("lng")&&(t.sDefault=localStorage.getItem("lng")),$.getJSON("/lang.json",function(n){t.oStrings=n,t.toggler($('[data-lng="'+t.sDefault+'"]')),t.set(t.sDefault,function(){$("[data-lng]").click(function(){t.toggler($(this))})})}).fail(function(t,n,e){console.error(e)})},toggler:function(t){var n=this;t.addClass("active").siblings().removeClass("active");var e=t.data("lng");n.set(e,function(){headerTyping()})},set:function(t,n){var e=this;e.oStrings[t]||(t=e.sDefault),e.sCurrent=t,$("[lngstr]").each(function(i){var o=$(this).attr("lngstr");$(this).animate({opacity:0},200,function(){$(this).html(e.oStrings[t][o]),$(this).animate({opacity:1},200,function(){$("[lngstr]").length==i+1&&"function"==typeof n&&n()})})}),localStorage.setItem("lng",t)}},oNav={hash:"",elems:null,istimeout:!1,init:function(){this.elems=$(".section[id]"),oNav.upd()},upd:function(){oNav.istimeout&&clearTimeout(oNav.istimeout),oNav.istimeout=setTimeout(function(){oNav.elems.each(function(){if(isElementOnScreen($(this)))return oNav.elems.removeClass("active"),$(this).addClass("active"),oNav.hash="#"+$(this).attr("id"),!1;oNav.hash=""}),oNav.set()},20)},set:function(){oNav.hash.length>0?history.pushState(null,null,oNav.hash):history.pushState(null,null,window.location.pathname+window.location.search)}},function(t){function n(t,n){for(var e=[],i=t.firstChild;i;i=i.nextSibling)3==i.nodeType&&e.push(i.nodeValue);return e.join(n)}t.fn.textNode=function(e,i){return arguments.length<2&&(i=""),arguments.length<1&&(e=""),t.map(this,function(t){return n(t,i)}).join(e)}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
